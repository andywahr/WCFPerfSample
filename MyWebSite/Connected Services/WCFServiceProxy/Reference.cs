//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWebSite.WCFServiceProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service", ConfigurationName="WCFServiceProxy.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/GetData", ReplyAction="http://service/IService2/GetDataResponse")]
        Contracts.LogInfo GetData(Contracts.LogInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/GetData", ReplyAction="http://service/IService2/GetDataResponse")]
        System.Threading.Tasks.Task<Contracts.LogInfo> GetDataAsync(Contracts.LogInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/AsyncGetData", ReplyAction="http://service/IService2/AsyncGetDataResponse")]
        Contracts.LogInfo AsyncGetData(Contracts.LogInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/AsyncGetData", ReplyAction="http://service/IService2/AsyncGetDataResponse")]
        System.Threading.Tasks.Task<Contracts.LogInfo> AsyncGetDataAsync(Contracts.LogInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/SuperAsyncGetData", ReplyAction="http://service/IService2/SuperAsyncGetDataResponse")]
        Contracts.LogInfo SuperAsyncGetData(Contracts.LogInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service/IService2/SuperAsyncGetData", ReplyAction="http://service/IService2/SuperAsyncGetDataResponse")]
        System.Threading.Tasks.Task<Contracts.LogInfo> SuperAsyncGetDataAsync(Contracts.LogInfo value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : MyWebSite.WCFServiceProxy.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<MyWebSite.WCFServiceProxy.IService2>, MyWebSite.WCFServiceProxy.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Contracts.LogInfo GetData(Contracts.LogInfo value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<Contracts.LogInfo> GetDataAsync(Contracts.LogInfo value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Contracts.LogInfo AsyncGetData(Contracts.LogInfo value) {
            return base.Channel.AsyncGetData(value);
        }
        
        public System.Threading.Tasks.Task<Contracts.LogInfo> AsyncGetDataAsync(Contracts.LogInfo value) {
            return base.Channel.AsyncGetDataAsync(value);
        }
        
        public Contracts.LogInfo SuperAsyncGetData(Contracts.LogInfo value) {
            return base.Channel.SuperAsyncGetData(value);
        }
        
        public System.Threading.Tasks.Task<Contracts.LogInfo> SuperAsyncGetDataAsync(Contracts.LogInfo value) {
            return base.Channel.SuperAsyncGetDataAsync(value);
        }
    }
}
